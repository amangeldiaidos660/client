"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[967],{4492:function(e,t,n){/**
 * @license React
 * use-sync-external-store-shim.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(2265),o="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},a=r.useState,i=r.useEffect,s=r.useLayoutEffect,u=r.useDebugValue;function l(e){var t=e.getSnapshot;e=e.value;try{var n=t();return!o(e,n)}catch(e){return!0}}var d="undefined"==typeof window||void 0===window.document||void 0===window.document.createElement?function(e,t){return t()}:function(e,t){var n=t(),r=a({inst:{value:n,getSnapshot:t}}),o=r[0].inst,d=r[1];return s(function(){o.value=n,o.getSnapshot=t,l(o)&&d({inst:o})},[e,n,t]),i(function(){return l(o)&&d({inst:o}),e(function(){l(o)&&d({inst:o})})},[e]),u(n),n};t.useSyncExternalStore=void 0!==r.useSyncExternalStore?r.useSyncExternalStore:d},5107:function(e,t,n){/**
 * @license React
 * use-sync-external-store-shim/with-selector.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(2265),o=n(554),a="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},i=o.useSyncExternalStore,s=r.useRef,u=r.useEffect,l=r.useMemo,d=r.useDebugValue;t.useSyncExternalStoreWithSelector=function(e,t,n,r,o){var c=s(null);if(null===c.current){var f={hasValue:!1,value:null};c.current=f}else f=c.current;var v=i(e,(c=l(function(){function e(e){if(!u){if(u=!0,i=e,e=r(e),void 0!==o&&f.hasValue){var t=f.value;if(o(t,e))return s=t}return s=e}if(t=s,a(i,e))return t;var n=r(e);return void 0!==o&&o(t,n)?t:(i=e,s=n)}var i,s,u=!1,l=void 0===n?null:n;return[function(){return e(t())},null===l?void 0:function(){return e(l())}]},[t,n,r,o]))[0],c[1]);return u(function(){f.hasValue=!0,f.value=v},[v]),d(v),v}},554:function(e,t,n){e.exports=n(4492)},5006:function(e,t,n){e.exports=n(5107)},920:function(e,t,n){n.d(t,{Z:function(){return u}});for(var r,o={randomUUID:"undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)},a=new Uint8Array(16),i=[],s=0;s<256;++s)i.push((s+256).toString(16).slice(1));var u=function(e,t,n){if(o.randomUUID&&!t&&!e)return o.randomUUID();var s=(e=e||{}).random||(e.rng||function(){if(!r&&!(r="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)))throw Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return r(a)})();if(s[6]=15&s[6]|64,s[8]=63&s[8]|128,t){n=n||0;for(var u=0;u<16;++u)t[n+u]=s[u];return t}return function(e,t=0){return(i[e[t+0]]+i[e[t+1]]+i[e[t+2]]+i[e[t+3]]+"-"+i[e[t+4]]+i[e[t+5]]+"-"+i[e[t+6]]+i[e[t+7]]+"-"+i[e[t+8]]+i[e[t+9]]+"-"+i[e[t+10]]+i[e[t+11]]+i[e[t+12]]+i[e[t+13]]+i[e[t+14]]+i[e[t+15]]).toLowerCase()}(s)}},9099:function(e,t,n){n.d(t,{Ue:function(){return f}});let r=e=>{let t;let n=new Set,r=(e,r)=>{let o="function"==typeof e?e(t):e;if(!Object.is(o,t)){let e=t;t=(null!=r?r:"object"!=typeof o||null===o)?o:Object.assign({},t,o),n.forEach(n=>n(t,e))}},o=()=>t,a={setState:r,getState:o,getInitialState:()=>i,subscribe:e=>(n.add(e),()=>n.delete(e)),destroy:()=>{console.warn("[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected."),n.clear()}},i=t=e(r,o,a);return a},o=e=>e?r(e):r;var a=n(2265),i=n(5006);let{useDebugValue:s}=a,{useSyncExternalStoreWithSelector:u}=i,l=!1,d=e=>e,c=e=>{"function"!=typeof e&&console.warn("[DEPRECATED] Passing a vanilla store will be unsupported in a future version. Instead use `import { useStore } from 'zustand'`.");let t="function"==typeof e?o(e):e,n=(e,n)=>(function(e,t=d,n){n&&!l&&(console.warn("[DEPRECATED] Use `createWithEqualityFn` instead of `create` or use `useStoreWithEqualityFn` instead of `useStore`. They can be imported from 'zustand/traditional'. https://github.com/pmndrs/zustand/discussions/1937"),l=!0);let r=u(e.subscribe,e.getState,e.getServerState||e.getInitialState,t,n);return s(r),r})(t,e,n);return Object.assign(n,t),n},f=e=>e?c(e):c},9291:function(e,t,n){n.d(t,{mW:function(){return i},tJ:function(){return c}});let r=new Map,o=e=>{let t=r.get(e);return t?Object.fromEntries(Object.entries(t.stores).map(([e,t])=>[e,t.getState()])):{}},a=(e,t,n)=>{if(void 0===e)return{type:"untracked",connection:t.connect(n)};let o=r.get(n.name);if(o)return{type:"tracked",store:e,...o};let a={connection:t.connect(n),stores:{}};return r.set(n.name,a),{type:"tracked",store:e,...a}},i=(e,t={})=>(n,r,i)=>{let u;let{enabled:l,anonymousActionType:d,store:c,...f}=t;try{u=(null==l||l)&&window.__REDUX_DEVTOOLS_EXTENSION__}catch(e){}if(!u)return l&&console.warn("[zustand devtools middleware] Please install/enable Redux devtools extension"),e(n,r,i);let{connection:v,...p}=a(c,u,f),g=!0;i.setState=(e,t,a)=>{let s=n(e,t);if(!g)return s;let u=void 0===a?{type:d||"anonymous"}:"string"==typeof a?{type:a}:a;return void 0===c?null==v||v.send(u,r()):null==v||v.send({...u,type:`${c}/${u.type}`},{...o(f.name),[c]:i.getState()}),s};let m=(...e)=>{let t=g;g=!1,n(...e),g=t},y=e(i.setState,r,i);if("untracked"===p.type?null==v||v.init(y):(p.stores[p.store]=i,null==v||v.init(Object.fromEntries(Object.entries(p.stores).map(([e,t])=>[e,e===p.store?y:t.getState()])))),i.dispatchFromDevtools&&"function"==typeof i.dispatch){let e=!1,t=i.dispatch;i.dispatch=(...n)=>{"__setState"!==n[0].type||e||(console.warn('[zustand devtools middleware] "__setState" action type is reserved to set state from the devtools. Avoid using it.'),e=!0),t(...n)}}return v.subscribe(e=>{var t;switch(e.type){case"ACTION":if("string"!=typeof e.payload){console.error("[zustand devtools middleware] Unsupported action format");return}return s(e.payload,e=>{if("__setState"===e.type){if(void 0===c){m(e.state);return}1!==Object.keys(e.state).length&&console.error(`
                    [zustand devtools middleware] Unsupported __setState action format. 
                    When using 'store' option in devtools(), the 'state' should have only one key, which is a value of 'store' that was passed in devtools(),
                    and value of this only key should be a state object. Example: { "type": "__setState", "state": { "abc123Store": { "foo": "bar" } } }
                    `);let t=e.state[c];if(null==t)return;JSON.stringify(i.getState())!==JSON.stringify(t)&&m(t);return}i.dispatchFromDevtools&&"function"==typeof i.dispatch&&i.dispatch(e)});case"DISPATCH":switch(e.payload.type){case"RESET":if(m(y),void 0===c)return null==v?void 0:v.init(i.getState());return null==v?void 0:v.init(o(f.name));case"COMMIT":if(void 0===c){null==v||v.init(i.getState());break}return null==v?void 0:v.init(o(f.name));case"ROLLBACK":return s(e.state,e=>{if(void 0===c){m(e),null==v||v.init(i.getState());return}m(e[c]),null==v||v.init(o(f.name))});case"JUMP_TO_STATE":case"JUMP_TO_ACTION":return s(e.state,e=>{if(void 0===c){m(e);return}JSON.stringify(i.getState())!==JSON.stringify(e[c])&&m(e[c])});case"IMPORT_STATE":{let{nextLiftedState:n}=e.payload,r=null==(t=n.computedStates.slice(-1)[0])?void 0:t.state;if(!r)return;void 0===c?m(r):m(r[c]),null==v||v.send(null,n);break}case"PAUSE_RECORDING":return g=!g}return}}),y},s=(e,t)=>{let n;try{n=JSON.parse(e)}catch(e){console.error("[zustand devtools middleware] Could not parse the received json",e)}void 0!==n&&t(n)},u=e=>t=>{try{let n=e(t);if(n instanceof Promise)return n;return{then:e=>u(e)(n),catch(e){return this}}}catch(e){return{then(e){return this},catch:t=>u(t)(e)}}},l=(e,t)=>(n,r,o)=>{let a,i,s={getStorage:()=>localStorage,serialize:JSON.stringify,deserialize:JSON.parse,partialize:e=>e,version:0,merge:(e,t)=>({...t,...e}),...t},l=!1,d=new Set,c=new Set;try{a=s.getStorage()}catch(e){}if(!a)return e((...e)=>{console.warn(`[zustand persist middleware] Unable to update item '${s.name}', the given storage is currently unavailable.`),n(...e)},r,o);let f=u(s.serialize),v=()=>{let e;let t=f({state:s.partialize({...r()}),version:s.version}).then(e=>a.setItem(s.name,e)).catch(t=>{e=t});if(e)throw e;return t},p=o.setState;o.setState=(e,t)=>{p(e,t),v()};let g=e((...e)=>{n(...e),v()},r,o),m=()=>{var e;if(!a)return;l=!1,d.forEach(e=>e(r()));let t=(null==(e=s.onRehydrateStorage)?void 0:e.call(s,r()))||void 0;return u(a.getItem.bind(a))(s.name).then(e=>{if(e)return s.deserialize(e)}).then(e=>{if(e){if("number"!=typeof e.version||e.version===s.version)return e.state;if(s.migrate)return s.migrate(e.state,e.version);console.error("State loaded from storage couldn't be migrated since no migrate function was provided")}}).then(e=>{var t;return n(i=s.merge(e,null!=(t=r())?t:g),!0),v()}).then(()=>{null==t||t(i,void 0),l=!0,c.forEach(e=>e(i))}).catch(e=>{null==t||t(void 0,e)})};return o.persist={setOptions:e=>{s={...s,...e},e.getStorage&&(a=e.getStorage())},clearStorage:()=>{null==a||a.removeItem(s.name)},getOptions:()=>s,rehydrate:()=>m(),hasHydrated:()=>l,onHydrate:e=>(d.add(e),()=>{d.delete(e)}),onFinishHydration:e=>(c.add(e),()=>{c.delete(e)})},m(),i||g},d=(e,t)=>(n,r,o)=>{let a,i={storage:function(e,t){let n;try{n=e()}catch(e){return}return{getItem:e=>{var t;let r=e=>null===e?null:JSON.parse(e,void 0),o=null!=(t=n.getItem(e))?t:null;return o instanceof Promise?o.then(r):r(o)},setItem:(e,t)=>n.setItem(e,JSON.stringify(t,void 0)),removeItem:e=>n.removeItem(e)}}(()=>localStorage),partialize:e=>e,version:0,merge:(e,t)=>({...t,...e}),...t},s=!1,l=new Set,d=new Set,c=i.storage;if(!c)return e((...e)=>{console.warn(`[zustand persist middleware] Unable to update item '${i.name}', the given storage is currently unavailable.`),n(...e)},r,o);let f=()=>{let e=i.partialize({...r()});return c.setItem(i.name,{state:e,version:i.version})},v=o.setState;o.setState=(e,t)=>{v(e,t),f()};let p=e((...e)=>{n(...e),f()},r,o);o.getInitialState=()=>p;let g=()=>{var e,t;if(!c)return;s=!1,l.forEach(e=>{var t;return e(null!=(t=r())?t:p)});let o=(null==(t=i.onRehydrateStorage)?void 0:t.call(i,null!=(e=r())?e:p))||void 0;return u(c.getItem.bind(c))(i.name).then(e=>{if(e){if("number"!=typeof e.version||e.version===i.version)return e.state;if(i.migrate)return i.migrate(e.state,e.version);console.error("State loaded from storage couldn't be migrated since no migrate function was provided")}}).then(e=>{var t;return n(a=i.merge(e,null!=(t=r())?t:p),!0),f()}).then(()=>{null==o||o(a,void 0),a=r(),s=!0,d.forEach(e=>e(a))}).catch(e=>{null==o||o(void 0,e)})};return o.persist={setOptions:e=>{i={...i,...e},e.storage&&(c=e.storage)},clearStorage:()=>{null==c||c.removeItem(i.name)},getOptions:()=>i,rehydrate:()=>g(),hasHydrated:()=>s,onHydrate:e=>(l.add(e),()=>{l.delete(e)}),onFinishHydration:e=>(d.add(e),()=>{d.delete(e)})},i.skipHydration||g(),a||p},c=(e,t)=>"getStorage"in t||"serialize"in t||"deserialize"in t?(console.warn("[DEPRECATED] `getStorage`, `serialize` and `deserialize` options are deprecated. Use `storage` option instead."),l(e,t)):d(e,t)}}]);